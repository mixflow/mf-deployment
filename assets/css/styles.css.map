{"version":3,"sourceRoot":"","sources":["../jekyll-theme-mixflow/_sass/mixflow/_base.scss","../jekyll-theme-mixflow/_sass/mixflow/main.scss","../jekyll-theme-mixflow/_sass/mixflow/skins/default.scss","../jekyll-theme-mixflow/_sass/mixflow/layout/_header.scss","../jekyll-theme-mixflow/_sass/mixflow/util/12columns.scss","../jekyll-theme-mixflow/_sass/mixflow/layout/_home.scss","../jekyll-theme-mixflow/_sass/mixflow/layout/_post.scss","../jekyll-theme-mixflow/_sass/mixflow/util/_css-icon.scss","../jekyll-theme-mixflow/_sass/mixflow/_accessibility.scss","_sass/mixflow/custom-styles.scss"],"names":[],"mappings":"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;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8CE;EACE;IA3CJ;IACA;IAEA;;EA6CI;IACE;MAtDN;MACA;;;;AA8DF;EACE;IACE;IACA;IACA;;EACA;IACE;IACA;;;AC7IN;EACE;EACA;EAEA;;;AAIF;EACE;;;AAKF;EACE;EACA;EACA,eJ/Ba;;AIiCb;EAGE;;AAGF;EAIE;;AAEF;EACE;;AAKA;EACE,OHnBa;;AGsBf;EACE;EJrBJ;EI4BI,OH3CO;;AGuCP;EACE;;AAIF;EACE,OHhCW;;AGqCf;EACE;EJpCJ;EIuCI,OHpDc;;AGqDd;EACE,OH3CW;;ADYjB;EIsCE;IAEE;IACA;IACA;IAGA;;EAEF;IACE;;EAGF;IACE;IACA;IAEA;IAIA;IAEA;;EAEA;IACE;IACA,OHpFa;;EGsFf;IACE;IACA,OHvFoB;;;;AG+F5B;EACE;;AAMA;EACE;;AAGF;EACE;EACA;EACA;EAEA;EAEA,WJhHe;EIiHf,OHvHgB;;;AIxBpB;AAAA;ELqCE;EKjCA;EACA;EAEA,eLLa;;;AKcf;EACE;EACA;;AAEA;ELiBA;;AAUA;EK3BA;ILiBA;;;AKTA;ELSA;;AAUA;EKnBA;ILSA;;;AKDA;ELCA;;AKGA;ELHA;;AKMA;ELNA;;;AM3BF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBE;AAEE;AAqCA;AA0BA;;AA9DA;AAME;AAAA;AAAA;AAAA;AAyBA;;AArBA;AAEE;EACA;EACA;EACA;EAEA;EACA,OAjBW;EAkBX,QAjBY;EAkBZ;EACA;EACA,cA3B0B;;AA8B5B;AACE;EACA;EACA,OAzBQ;;AAsCV;EACE;EACA;EACA;EAEA,ONpCQ;EMqCR,QARY;EASZ;EACA;EACA,cAvD0B;;AAyE5B;EAEE;EACA;EACA;EAEA,OAVW;EAWX,QAVY;EAWZ,kBAjF0B;EAmF1B,MAZU;;AAgBZ;EA9GJ,gBA+GyB;EA9GzB,cA8GyB;EA7GzB,eA6GyB;EA5GzB,mBA4GyB;EA3GzB,WA2GyB;;AAGrB;EAlHJ,gBAmHyB;EAlHzB,cAkHyB;EAjHzB,eAiHyB;EAhHzB,mBAgHyB;EA/GzB,WA+GyB;;ACrHzB;EACE;;;ACAJ;EACE;EAIA;;AAEA;EACE,OPYS;;ADyBX;EQ7CF;IAYI;;;;AAMJ;EACE;;;AAGF;EAGE;EAEA;;;AAMF;AACE;EACA;EACA;EAEA;EACA;;;AAIF;EACE;ERTA;EQaA;;ARHA;EQFF;IAOI;;;;AAQJ;EACE;EACA;EAEA;;AAGA;EACE;;AAGF;EACE;;;AAOJ;EAEE;;ARlCA;EQgCF;IAOI","sourcesContent":["html {\n  font-size: $base-font-size;\n  font-family: $base-font-family;\n\n  @include media-rule($media-large) {\n    font-size: $base-font-size * 1.15;\n  }\n  @include media-rule($media-large) {\n    font-size: $base-font-size * 1.25;\n  }\n}\n\n\n/**\n * Reset some basic elements\n*/\nbody, h1, h2, h3, h4, h5, h6,\np, blockquote, pre, hr,\ndl, dd, ol, ul, figure {\n  margin: 0;\n  padding: 0;\n}\n\n\n/**\n * Set `margin-bottom` to maintain vertical rhythm\n */\n h1, h2, h3, h4, h5, h6,\n p, blockquote, pre,\n ul, ol, dl, figure,\n %vertical-rhythm {\n   margin-bottom: $spacing-size * 0.5;\n\n   @include media-rule($media-middle) {\n    margin-bottom: $large-spacing-size;\n   }\n }\n\nhr {\n  margin-top: $spacing-size;\n  margin-bottom: $spacing-size;\n}\n\n// shink the margin between paragraphs inside a block quote\nblockquote p {\n  @include media-rule($media-middle) {\n    margin-bottom: $large-spacing-size * 0.75;\n  }\n}\n\n\n\n// body basic styling\nbody {\n  // need specify line-height or font-familiy to avoid differences between browsers.\n  line-height: $base-line-height;\n\n  // background\n  background-color: $background-color;\n}\n\n\n// wrapper ----------------------------------------------------------------\n\n// `wrapper` class also set the main content max width. normally it's used for mostly content.\n// But in some conditions like home gallery, we don't want it,\n// so we just use the `wrapper-spacing` to specify the padding and margin only.\n.wrapper-spacing {\n  margin-left: auto;\n  margin-right: auto;\n\n  padding-left: $spacing-size;\n  padding-right: $spacing-size;\n\n  @include media-rule($media-middle){\n    padding-left: $large-spacing-size;\n    padding-right: $large-spacing-size;\n  }\n}\n\n.main-content-width {\n  max-width: $main-content-width - 2 * $spacing-size;\n\n  // with wider\n  @include media-rule($media-middle){\n    max-width: $main-content-width - 2 * $large-spacing-size;\n  }\n}\n\n.wrapper {\n  @extend .wrapper-spacing;\n  @extend .main-content-width;\n}\n\n\n\n\n// links ----------------------------------------------------------------\n\n// only has underline when hover\na {\n  color: $link-color;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n    color: $link-hover-color;\n  }\n\n  &:visited {\n    color: $link-visited-color;\n  }\n}\n\n// Lists ----------------------------------------------------------------\nul, ol {\n  margin-left: $spacing-size;\n}\n\n// no spacing under nested lists\nli {\n  > ul,\n  > ol {\n    margin-bottom: 0;\n  }\n}\n\n// headings ----------------------------------------------------------------\nh1, h2, h3, h4, h5, h6 {\n  font-weight: $base-font-weight;\n}\n\n// Figures, caption ----------------------------------------------------------------\n\n// only work for the figure which has img child.\n// TODO firefox does not enable :has by default, use polyfill?\nfigure:has(> img) {\n  text-align: center;\n}\n\n\n%reponsive-figure {\n\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n\n  @include media-rule($media-middle) {\n    // make the width based on min-content, in case of the long caption take one line,\n    // also make not too small by min-width.\n    // no restriction on middle and above media query.\n    min-width: $main-content-width * 0.25;\n    width: min-content;\n  }\n}\n\n// float only when middle media and above\n@each $position in ('left', 'right', 'none') {\n  .md-float-#{$position} {\n\n    @extend %reponsive-figure;\n\n\n    @include media-rule($media-middle){\n      float: #{$position};\n    }\n  }\n}\n\n\n// blockquote\nblockquote {\n  padding-left: $spacing-size;\n\n  background-color: $background-color-dark;\n  border-left: 2px solid $border-color-dark;\n\n  color: $text-trival-color;\n  // font-style: italic;\n}\n\n// code highligh\nfigure.highlight {\n\n  figcaption {\n    background-color: $inverse-background-color; // $background-color-dark;\n    color: $inverse-text-trival-color;\n    font-size: $small-font-size;\n\n    padding: 0 0.5*$spacing-size;\n\n    // round the top conners\n    border-top-left-radius: $spacing-size * .5;\n    border-top-right-radius: $spacing-size * .5;\n\n    .language {\n      font-weight: bold;\n      margin-right: $spacing-size;\n    }\n  }\n}\n\ncode {\n  padding: 0 0.2*$spacing-size;\n  // hard code the colors with same values of Roes-Pine-Dawn's.\n  // TODO relay on shiki background color, or directly use shiki.\n  background-color: #faf4ed;\n  color: #D7827E; // highlighter classname color\n}\n\n// code highlighter styles have been rendered(inline styles) by shiki highlighter(nodejs)\n// which have no css defined here.\npre{\n  padding-top: 0.5*$spacing-size;\n  padding-bottom: 0.5*$spacing-size;\n\n  // round the bottom conners\n  border-bottom-left-radius: $spacing-size * .5;\n  border-bottom-right-radius: $spacing-size * .5;\n\n  // shadow\n  box-shadow: 0px 3px 10px hsla(0, 0%, 0%, 10%), 0px 4px 24px hsla(0, 0%, 0%, 5%);\n\n  code {\n    display: block;\n\n    white-space: pre-wrap; /* Preserve spaces and allow wrapping */\n    word-wrap: break-word; /* Break long words */\n\n    // line numbers\n    counter-reset: step;\n    counter-increment: step calc(var(--start, 1) - 1);\n\n    .line::before {\n      content: counter(step);\n      counter-increment: step;\n\n      display: inline-block;\n      min-width: 1rem;\n      margin-right: clamp(0.5rem, 1vw, 1.5rem);\n      text-align: right;\n      color: $text-trival-color; // rgba(115,138,148,.4)\n    }\n  }\n\n}\n\n","\n// global variables\n$spacing-size: 14px;\n$large-spacing-size: $spacing-size * 2; // for the large device\n\n// basic line height\n$base-line-height: 1.5 !default;\n\n// main content\n$main-content-width: 820px;\n\n// device size\n$media-mobile-size: 480px;\n$media-tablet-size: 720px;\n$media-desktop-size: 960px;\n// $media-wide-size: 1200px;\n\n// alias for different media rules' min-width\n// $media-xs, below $media-small; 0 to mobile size\n$media-small:  $media-mobile-size;\n$media-middle: $media-tablet-size;\n$media-large: $media-desktop-size;\n\n// $media-small-and-above: $media-mobile-size;\n// $media-middle-and-above: $media-tablet-size;\n// $media-large-and-above: $media-desktop-size;\n// $media-huge-and-above: $media-wide-size;\n\n// font variables\n$base-font-size: 16px !default;\n$small-font-size:  0.875em !default; // 3/4\n\n$base-font-weight: 400 !default;\n$base-font-family: \"Times New Roman\", Times, serif !default;\n\n// font size without use em or rem unit directly\n@mixin relative-font-size($ratio) {\n  font-size: #{$ratio}rem;\n}\n\n//\n$css-icon-size: 16px;\n\n\n// CSS media query method\n// default device argument is screen\n@mixin media-rule($width, $device: screen) {\n  @media #{$device} and (min-width: $width) {\n    @content;\n  }\n}\n\n// specific device size media rule style. by use max-width to limit.\n// use device size for the width parameter.\n@mixin limit-media-rule($width, $device: screen) {\n  @media #{$device} and (max-width: $width) {\n    @content;\n  }\n}\n\n// the color theme. further options for different color themes.\n@import \"mixflow/skins/default\";\n// TODO import the css which contains custom variables for overriding\n\n@import \"mixflow/base\";\n@import \"mixflow/layout/header\";\n@import \"mixflow/layout/home\";\n@import \"mixflow/layout/post\";\n\n@import \"mixflow/util/css-icon\";\n@import \"mixflow/accessibility\";\n\n@import \"mixflow/custom-styles\"; // placeholder file for overriding styles\n","@use \"sass:color\"; // use color method\n// color related styles\n// further multiple themes\n\n// the color variables\n\n// border --------------------------------\n$border-color: #666;\n// border lighter colors\n$border-color-light: lighten($border-color, 20%);\n// border darker colors\n$border-color-dark: darken($border-color, 20%);\n\n// background --------------------------------\n// light grey color\n$background-color: #f4f4f4 !default;\n$code-backgroud-color: color.scale($background-color, $lightness: -20%) !default;\n\n\n$background-color-dark: color.scale($background-color, $lightness: -10%) !default;\n\n// text ------\n$text-color: #000 !default;\n// use for the text which are not main content, e.g. subheading, image captions.\n$text-trival-color: color.scale($text-color, $lightness: 40%) !default;\n\n// inverse backgorund -----\n$inverse-background-color: invert($background-color, 80%) !default;\n$inverse-text-color: invert($text-color) !default;\n$inverse-text-trival-color: color.scale($inverse-text-color, $lightness: -8%) !default;\n\n// links -----\n// link base color, visited color and hover color\n$link-color: rgb(63, 151, 234);\n$link-visited-color: darken($link-color, 15%);\n$link-hover-color: lighten($link-color, 15%);\n","\n// main site header styles\n$site-header-z-index: 5;\n.site-header {\n  // display: block;\n\n  // use flex layout to vertical centering the logo&title and navigator links.\n  display: flex;\n  align-items: center;\n\n  position: sticky;\n  top: 0; // keep in top of screen\n  z-index: $site-header-z-index;\n\n  // height: $base-font-size * 2.25;\n  // line-height: $base-line-height * $base-font-size * 2.2;\n\n  border-bottom: 1px solid $border-color;\n  background-color: $background-color;\n\n}\n\n/* fold the header, when user scroll down with the controll by javascript*/\n.site-header.sticky {\n  transform: translateY(-100%);\n  transition: transform 0.3s ease-in-out;\n}\n/* show up(unfold) the header */\n.site-header.sticky.visible {\n  transform: translateY(0);\n}\n\n.site-logo-title-container {\n  // use flex layout to vertical centering the logo, title\n  display: inline-flex;\n  align-items: center;\n\n}\n\n.site-title {\n  @include relative-font-size(2);\n\n  margin-left: $spacing-size * 0.25;\n}\n\n.site-logo {\n  width: auto;\n  height: $base-line-height * $base-font-size *  1.5;\n}\n\n\n// navigator bar styles\n.site-nav {\n  // float: right;\n  // position: relative;\n  // top: $spacing-size*0.5;\n\n  // in flex layout, use left auto margin to position right instead of right floating,\n  // also no need to adjust and hardcode the top spacing.\n  margin-left: auto;\n\n  // Use hidden checkbox to record the status when click without JS.\n  // trigger checkbox hidden.\n  input.nav-trigger {\n    display: none;\n\n  }\n  // trigger button\n  label[for=\"nav-trigger\"] {\n\n    .menu {\n      display: block;\n      cursor: pointer; // clickable\n      // float: right;\n\n      border: 1px solid $border-color-light;\n\n      $scale: 1.8; // the whole icon height is scaled with css-icon height\n      padding-top: $css-icon-size * ($scale - 1) * 0.5;\n      height: $css-icon-size * $scale;\n\n      width: $css-icon-size * 2.2;\n      // center the icon child\n      text-align: center;\n    }\n  }\n\n\n  //  trigger's target, contains the page links\n  .nav-items {\n    // float: right;\n    display: none;\n    position: absolute;\n    z-index: $site-header-z-index + 1;\n\n    right: $spacing-size;\n\n    list-style-type: none; //remove the dots\n\n    @include relative-font-size(1.6);\n\n    .page-link {\n      display: block;\n\n      // margin-left: $spacing-size;\n      padding: $spacing-size*0.5 $spacing-size*2;\n\n      line-height: $base-line-height * 1.4;\n      // height: $base-line-height * 1.4;\n\n      border: 1px solid $border-color-light;\n    }\n  }\n\n  // determine the target whether show or hide by trigger checkbox checked status\n  input.nav-trigger ~ .nav-items {\n    display: none;\n  }\n  input.nav-trigger:checked ~ .nav-items {\n    display: block;\n\n    background-color: $background-color;\n  }\n\n  // show the navigator links and hide the menu button.\n  @include media-rule($media-small) {\n\n    // trigger button\n    label[for=\"nav-trigger\"] {\n      display: none;\n    }\n\n    // undo the trigger, show the links no matter the trigger status.\n    .nav-items {\n      display: inline !important;\n\n      position: static;\n\n      .page-link {\n        display:  inline;\n\n        border: 0;\n\n        padding: 0;\n        margin-left: auto;\n\n        &:not(:first-child) {\n          margin-left: $spacing-size;\n\n          @include media-rule($media-middle) {\n              margin-left: $large-spacing-size;\n          }\n        }\n      }\n    }\n\n  } // end small media\n} // end .site-nav\n","/* 12columns.css | Created by Katherine Kato | Released under the MIT license */\n/* GitHub: https://kathykato.github.io/12columns/ */\n\n\n/*\n  Changed by Mixflow\n  Syntax:\n    1. aliases prefix of 'column-' for the prefix of 'column-xs-'.\n       Only naming convenience, because extra small(xs) should also be default.\n    2. Encapsule the column positioning code to reduce the repeat code.\n       (1). Use map for device sizes, because loop the map to encapsule medie queries.\n       (2). Positioning methods `column-position` for resusage.\n*/\n\n@use \"sass:map\";\n\n$grid-columns: 12;\n\n// use map, because Sass doesn't support dynamic variable name.\n$device-sizes: (\n  sm: 48rem,\n  md: 62rem,\n  lg: 75rem,\n) !default;\n\n// original Katherine code\n// $sm: 48rem;\n// $md: 62rem;\n// $lg: 75rem;\n\n.container {\n  margin: auto;\n  padding: 0 1rem;\n  max-width: 71.25rem;\n  width: 100%;\n}\n\n\n.grid {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n\n  -ms-flex-flow: row wrap;\n  flex-flow: row wrap;\n  > [class*=\"column-\"] {\n    display: block;\n  }\n}\n.first {\n  -webkit-box-ordinal-group: 0;\n  -ms-flex-order: -1;\n  order: -1;\n}\n\n.last {\n  -webkit-box-ordinal-group: 13;\n  -ms-flex-order: 12;\n  order: 12;\n}\n\n.align-top {\n  -webkit-box-align: start;\n  -ms-flex-align: start;\n  align-items: start;\n}\n\n.align-center {\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n}\n\n.align-bottom {\n  -webkit-box-align: end;\n  -ms-flex-align: end;\n  align-items: end;\n}\n\n// determinate the position of columne\n// if browser supports `display: grid`, otherwise use the polyfill.\n@mixin column-position($i) {\n  grid-column-start: span #{$i};\n  grid-column-end: span #{$i};\n}\n\n@mixin column-position-polyfill($i) {\n  -ms-flex-preferred-size: calc($i / $grid-columns) * 100%;\n  flex-basis: calc($i / $grid-columns) * 100%;\n\n  max-width: calc($i / $grid-columns) * 100%;\n}\n\n@for $i from 1 through $grid-columns {\n  // original Katherine Code\n  // .column-xs-#{$i} {\n  //   flex-basis: $i / $grid-columns * 100%;\n  //   max-width: $i / $grid-columns * 100%;\n  // }\n\n  // -- basic column styles ----\n  .column-xs-#{$i} {\n    @include column-position-polyfill($i);\n  }\n\n  // aliases for basic xs columns.\n  .column-#{$i}{\n    @extend .column-xs-#{$i};\n  }\n\n  // support grid display\n  @supports (display: grid) {\n    .column-xs-#{$i} {\n      @include column-position($i);\n    }\n\n    // aliases for basic xs columns.\n    .column-#{$i}{\n      @extend .column-xs-#{$i};\n    }\n  }\n} // end @each\n\n// for multi media queries\n// The loop nested order matters, must define the specific device styles at once.\n// To make the device styles work under correct order.\n@each $device in ('sm', 'md', 'lg') {\n  @for $i from 1 through $grid-columns {\n\n    @media (min-width: map.get($device-sizes, $device)) {\n      .column-#{$device}-#{$i} {\n        @include column-position-polyfill($i);\n      }\n\n      // browser support grid.\n      @supports (display: grid) {\n        .column-#{$device}-#{$i} {\n          @include column-position($i);\n        }\n      }\n    }\n\n  }\n} // end @each\n\n@supports (display: grid) {\n  .grid {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    grid-template-rows: auto;\n    > [class*=\"column-\"] {\n      margin: 0;\n      max-width: 100%;\n    }\n  }\n}\n\n// original Katherine code\n// @media (min-width: $sm) {\n//   @for $i from 1 through $grid-columns {\n//     .column-sm-#{$i} {\n//       -ms-flex-preferred-size: $i / $grid-columns * 100%;\n//       flex-basis: $i / $grid-columns * 100%;\n//       max-width: $i / $grid-columns * 100%;\n//     }\n//   }\n// }\n\n// @media (min-width: $md) {\n//   @for $i from 1 through $grid-columns {\n//     .column-md-#{$i} {\n//       -ms-flex-preferred-size: $i / $grid-columns * 100%;\n//       flex-basis: $i / $grid-columns * 100%;\n//       max-width: $i / $grid-columns * 100%;\n//     }\n//   }\n// }\n\n// @media (min-width: $lg) {\n//   @for $i from 1 through $grid-columns {\n//     .column-lg-#{$i} {\n//       -ms-flex-preferred-size: $i / $grid-columns * 100%;\n//       flex-basis: $i / $grid-columns * 100%;\n//       max-width: $i / $grid-columns * 100%;\n//     }\n//   }\n// }\n\n// @supports (display: grid) {\n//   .grid {\n//     display: grid;\n//     grid-template-columns: repeat(12, 1fr);\n//     grid-template-rows: auto;\n//     > [class*=\"column-\"] {\n//       margin: 0;\n//       max-width: 100%;\n//     }\n//   }\n\n//   @for $i from 1 through $grid-columns {\n//     .column-xs-#{$i} {\n//       grid-column-start: span #{$i};\n//       grid-column-end: span #{$i};\n//     }\n//   }\n\n//   @media(min-width: $sm) {\n//     @for $i from 1 through $grid-columns {\n//       .column-sm-#{$i} {\n//         grid-column-start: span #{$i};\n//         grid-column-end: span #{$i};\n//       }\n//     }\n//   }\n\n//   @media(min-width: $md) {\n//     @for $i from 1 through $grid-columns {\n//       .column-md-#{$i} {\n//         grid-column-start: span #{$i};\n//         grid-column-end: span #{$i};\n//       }\n//     }\n//   }\n\n//   @media(min-width: $lg) {\n//     @for $i from 1 through $grid-columns {\n//       .column-lg-#{$i} {\n//         grid-column-start: span #{$i};\n//         grid-column-end: span #{$i};\n//       }\n//     }\n//   }\n// }\n","@use \"sass:map\";\n@use \"../util/12columns\" as col12 with(\n  // ovrride the 12columns device sizes with theme own sizes\n  //   which also are used in media queries.\n  // 12columns use 4 different device sizes: xs(default), sm, md, lg.\n  $device-sizes: (\n    sm: $media-small,\n    md: $media-middle,\n    lg: $media-large\n  )\n);\n\n// @debug col12.$grid-columns\n\n// util class\n// full width\n%object-cover-fullwidth {\n  width: 100%;\n  height: 300px;\n\n  object-fit: cover;\n}\n\n// add the gap to grid class.\n.grid {\n  grid-gap: 1em;\n}\n\n// gallery ----------------------------------------------------------------\n// defines the image and caption styles.\n.home-gallery {\n  max-width: 2160px;\n  margin-top: $spacing-size * 0.5;\n  margin-bottom: $spacing-size;\n\n  figure {\n    // clip the outside, make the image still inside\n    //  when scale up, see `img` styles.\n    overflow: hidden;\n  }\n\n  img {\n    @extend %object-cover-fullwidth;\n\n    // for hover scale transformation\n    transition: all 0.4s ease-in-out;\n  }\n  img:hover {\n    transform: scale(1.05);\n\n  }\n\n  img ~ figcaption {\n    &:hover{\n      color: $link-hover-color;\n    }\n\n    .title { // title of image caption\n      margin-bottom: 0;\n      @include relative-font-size(1.4);\n\n      &:has( ~ .subtitle) {\n        margin-bottom: $spacing-size * 0.5;\n      }\n\n      color: $text-color;\n      &:hover{\n        color: $link-hover-color;\n      }\n    }\n\n\n    .subtitle { //subtitle of image caption\n      margin-bottom: 0;\n      @include relative-font-size(.8);\n\n      color: $text-trival-color;\n      &:hover{\n        color: $link-hover-color;\n      }\n    }\n  }\n\n  // On hoverable device, make image's caption above it and only visible when hover\n  @include media-rule($media-middle, \"(hover: hover)\"){\n    .image-container {\n      // use flex center the img and caption.\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      // make the caption child(abosulte position) width based on the container\n      position: relative;\n    }\n    figure:hover figcaption {\n      opacity: 1;\n    }\n\n    img ~ figcaption {\n      opacity: 0;\n      transition: opacity .2s ease-in-out;\n\n      position: absolute;\n\n\n\n      padding: $spacing-size*0.5 $spacing-size*2  $spacing-size;\n\n      background-color: rgba($inverse-background-color, .5);\n\n      .title {\n        font-size: clamp(1.4rem, 1.8vw, 2.4rem);\n        color: $inverse-text-color;\n      }\n      .subtitle {\n        font-size: clamp(0.8rem, 1vw, 1.2rem);\n        color: $inverse-text-trival-color;\n      }\n    }\n\n  }\n}\n\n// posts ----------------------------------------------------------------\n.home-posts {\n  list-style-type: none; //remove the dots\n\n  .post {\n    @extend %vertical-rhythm;\n  }\n\n  .post-title {\n    margin-bottom: 0;\n  }\n\n  .post-meta{\n    display: flex;\n    align-items: center;\n    justify-content: right;\n\n    max-width: 40em;\n\n    font-size: $small-font-size;\n    color: $text-trival-color;\n  }\n}\n\n\n\n\n",".post-title,\n.post-content h1 {\n  @include relative-font-size(2.4);\n  // make the title tight, compact the spacing of letter and shrink the line height\n  letter-spacing: -1px;\n  line-height: 1.2;\n\n  margin-bottom: $spacing-size;\n\n}\n\n.post-header {\n  @extend  %vertical-rhythm;\n}\n\n\n.post-content {\n  margin-top: $spacing-size * 4;\n  margin-bottom: $spacing-size * 3;\n\n  h2 {\n    @include relative-font-size(1.75);\n\n    @include media-rule($media-large) {\n      @include relative-font-size(2);\n    }\n  }\n\n  h3 {\n    @include relative-font-size(1.375);\n\n    @include media-rule($media-large) {\n      @include relative-font-size(1.625);\n    }\n  }\n\n  h4 {\n    @include relative-font-size(1.25);\n  }\n\n  h5 {\n    @include relative-font-size(1.125);\n  }\n  h6 {\n    @include relative-font-size(1.0625);\n  }\n}\n","@charset \"utf-8\";\n\n@mixin transform($transforms) {\n  -moz-transform: $transforms;\n  -o-transform: $transforms;\n  -ms-transform: $transforms;\n  -webkit-transform: $transforms;\n  transform: $transforms;\n}\n\n/*\n  CSS Icons.\n  Only use css style to create icons. no images, no javascript.\n\n  Usage:\n  1. Make sure to include the `icons` mixin(function) to initialize in sass file.\n     `@include icons()` which will set icon width to default value 1em.\n     You can also specify the width, e.g. `@incude icons(24px)`\n  2. In html, define 'css-icon' and the icon class-name in the element's class.\n     e.g. `<div class=\"css-icon menu\"></div>`\n\n  @author: MixFlow\n  @license: MIT\n*/\n\n// make sure `@include icons` to initialize the icons styles\n@mixin icons($width: 1em, $color: #000) {\n\n  .css-icon {\n\n    /* list-view */\n    &.list-view {\n      $line-width: calc($width * (8 / 10)); // the width, four lines of the icon\n      $line-height: calc($line-width / 8);\n      $padding: calc($line-width / 8); // the blank space width\n      $left-unit: 2;\n\n      /*\n        [*] [ ] [--------]\n        [one unit dot] [one unit space] [8 units line]\n      */\n      &:before,\n      &:after {\n        /* four lines */\n        content: \"\";\n        position: relative;\n        display: inline-block;\n\n        left: $padding * $left-unit; // leave space for the dots on the left\n        width: $line-width;\n        height: $line-height;\n        border-width: $line-height * 3 0;\n        border-style: double;\n        border-color: $color;\n      }\n\n      &:before {\n        /* 4 dot on the left (actually narrow line)*/\n        left: 0; //$padding ;\n        width: $padding;\n      }\n\n      /*hover focus active style*/\n    }\n\n    //[end] list-view icon\n\n    /* menu */\n    &.menu {\n      $line-width: $width; // the width, four lines of the icon\n      $line-height: calc($line-width / 8);\n\n      &:before {\n        content: \"\";\n        position: relative;\n        display: inline-block;\n        //left: $padding;\n        width: $line-width;\n        height: $line-height;\n        border-width: $line-height * 3 0;\n        border-style: double;\n        border-color: $color;\n      }\n\n      // &:after {\n      //   content: \"\";\n      //   display: inline-block;\n      //   position: relative;\n      // }\n    }\n\n    //[end] menu icon\n\n    /* close, delete, X*/\n    &.X {\n      $line-width: $width * 1.41; // sqrt(2)~=1.41, like diagonal\n      $line-height: calc($line-width / 12);\n      $left-move: -($line-width - $width) * 0.5;\n\n      &:before,\n      &:after {\n        content: \"\";\n        position: relative;\n        display: inline-block;\n\n        width: $line-width;\n        height: $line-height;\n        background-color: $color;\n\n        left: $left-move;\n\n      }\n\n      &:before {\n        @include transform(rotate(45deg));\n      }\n\n      &:after {\n        @include transform(rotate(-45deg));\n      }\n\n    }\n\n    &.close {\n      @extend .X;\n    }\n\n    //[end] X (close button)\n\n  }\n\n  // [end] .css-icon\n}\n\n// [end] mixin function icons(...)\n\n\n// initialize the css-cicon\n// see mixin method detail in util/_css-icon.scss file\n@include icons($css-icon-size);\n",".accessibility {\n  &.hide {\n    display: none;\n  }\n}\n","// Site Header ----------------------------------------------------------------\n\n.site-header {\n  height: 50px;\n\n  // disable the default wrapper,\n  // take whole lines, instead middle part.\n  max-width: 100%;\n\n  a {\n    color: $text-color;\n  }\n\n  @include media-rule($media-small) {\n    mix-width: clamp($media-small, 80%, $media-large);\n  }\n}\n\n// override the theme default hide(unfold to top)\n// because the vertical logo takes make space.\n.site-header.sticky {\n  transform: translateY(-500%); // instead default 100%\n}\n\n.site-logo-title-container {\n\n  // align self on top inside the .site-header flex layout,\n  align-self: start;\n  // all its children(logo and title) are aligned top.\n  align-items: start;\n  // both make the vertical logo pop.\n\n}\n\n\n.site-logo {\n  /* height: 36px; */\n  height: clamp(10rem, 14vw, 18rem);\n  width: auto;\n\n  padding: $spacing-size 0;\n  background: rgba($background-color, 0.4);\n\n}\n\n.site-title {\n  position: relative;\n\n  @include relative-font-size(1.9);\n\n  display: none;\n  @include media-rule($media-middle) {\n    display: block;\n  }\n}\n\n// home ----------------------------------------------------------------\n\n// reset the left and right padding of the gallery.\n// take the whole width.\n.home-gallery {\n  padding-left: 0;\n  padding-right: 0;\n\n  max-width: 100vw;\n\n  // put caption on horizontal right\n  .image-container {\n    justify-content: right;\n  }\n  // the first image always shows.\n  figure:first-child figcaption {\n    opacity: 1;\n  }\n\n}\n\n// post --------------------------------\n\n.post-content .post-title {\n  // make room for the vertical logo\n  padding-left: 1.8em;\n\n  // disable the room for the vertical logo when the device width is large enough\n  // the number is roughly the width of the logo with its spacing\n  @include media-rule($main-content-width + 2*$spacing-size + 100px){\n    padding-left: 0;\n  }\n\n}\n"],"file":"styles.css"}